fn write_json(map: table): string {
    let ret: &string = ref;

    write_map(map, ret);

    return ret.unpack();
}

fn write_property(prop: JsonProperty, str: &string): void {
    if (prop is string) str += "\"$prop\",";
    else if (prop is double || prop is bool || prop is null) str += "$prop,";
    else if (prop is table) write_map(prop, str);
    else if (prop is JsonProperty[]) write_array(prop, str);
}

fn write_map(map: table, str: &string): void {
    str += "{";

    for ((k: string, v: JsonProperty) in map.pairs()) {
        str += "\"$k\": $(write_property(v, str)),";
    }

    str += "},";
}

fn write_array(array: JsonProperty[], str: &string) {
    str += "[";

    for (v: JsonProperty in array) {
        str += "$(write_property(array, str)),";
    }

    str += "],";
}